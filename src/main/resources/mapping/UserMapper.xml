<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.px.spring.springtest.orm.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.study.px.spring.springtest.orm.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_image" property="userImage" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="country_code" property="countryCode" jdbcType="INTEGER" />
    <result column="province_code" property="provinceCode" jdbcType="INTEGER" />
    <result column="city_code" property="cityCode" jdbcType="INTEGER" />
    <result column="channel_id" property="channelId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="INTEGER" />
    <result column="account_balance" property="accountBalance" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mobile, user_image, nick_name, user_name, sex, country_code, province_code, city_code, 
    channel_id, created_at, updated_at, account_balance
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.px.spring.springtest.orm.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.px.spring.springtest.orm.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.px.spring.springtest.orm.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (mobile, user_image, nick_name, 
      user_name, sex, country_code, 
      province_code, city_code, channel_id, 
      created_at, updated_at, account_balance
      )
    values (#{mobile,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{countryCode,jdbcType=INTEGER}, 
      #{provinceCode,jdbcType=INTEGER}, #{cityCode,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=INTEGER}, #{updatedAt,jdbcType=INTEGER}, #{accountBalance,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.study.px.spring.springtest.orm.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="userImage != null" >
        user_image,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="countryCode != null" >
        country_code,
      </if>
      <if test="provinceCode != null" >
        province_code,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="channelId != null" >
        channel_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="accountBalance != null" >
        account_balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="countryCode != null" >
        #{countryCode,jdbcType=INTEGER},
      </if>
      <if test="provinceCode != null" >
        #{provinceCode,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="accountBalance != null" >
        #{accountBalance,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.px.spring.springtest.orm.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userImage != null" >
        user_image = #{record.userImage,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.countryCode != null" >
        country_code = #{record.countryCode,jdbcType=INTEGER},
      </if>
      <if test="record.provinceCode != null" >
        province_code = #{record.provinceCode,jdbcType=INTEGER},
      </if>
      <if test="record.cityCode != null" >
        city_code = #{record.cityCode,jdbcType=INTEGER},
      </if>
      <if test="record.channelId != null" >
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=INTEGER},
      </if>
      <if test="record.accountBalance != null" >
        account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      user_image = #{record.userImage,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      country_code = #{record.countryCode,jdbcType=INTEGER},
      province_code = #{record.provinceCode,jdbcType=INTEGER},
      city_code = #{record.cityCode,jdbcType=INTEGER},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=INTEGER},
      account_balance = #{record.accountBalance,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.px.spring.springtest.orm.model.User" >
    update user
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        user_image = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="countryCode != null" >
        country_code = #{countryCode,jdbcType=INTEGER},
      </if>
      <if test="provinceCode != null" >
        province_code = #{provinceCode,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="accountBalance != null" >
        account_balance = #{accountBalance,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.px.spring.springtest.orm.model.User" >
    update user
    set mobile = #{mobile,jdbcType=VARCHAR},
      user_image = #{userImage,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      country_code = #{countryCode,jdbcType=INTEGER},
      province_code = #{provinceCode,jdbcType=INTEGER},
      city_code = #{cityCode,jdbcType=INTEGER},
      channel_id = #{channelId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=INTEGER},
      account_balance = #{accountBalance,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>