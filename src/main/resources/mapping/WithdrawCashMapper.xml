<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.px.spring.springtest.orm.mapper.WithdrawCashMapper" >
  <resultMap id="BaseResultMap" type="com.study.px.spring.springtest.orm.model.WithdrawCash" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="withdraw_price" property="withdrawPrice" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="INTEGER" />
    <result column="cardholder_name" property="cardholderName" jdbcType="VARCHAR" />
    <result column="identity_card" property="identityCard" jdbcType="VARCHAR" />
    <result column="bank_address" property="bankAddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, withdraw_price, create_time, mobile, cardholder_name, identity_card, 
    bank_address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCashExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from withdraw_cash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from withdraw_cash
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from withdraw_cash
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCashExample" >
    delete from withdraw_cash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCash" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into withdraw_cash (user_id, withdraw_price, create_time, 
      mobile, cardholder_name, identity_card, 
      bank_address)
    values (#{userId,jdbcType=INTEGER}, #{withdrawPrice,jdbcType=DECIMAL}, #{createTime,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=INTEGER}, #{cardholderName,jdbcType=VARCHAR}, #{identityCard,jdbcType=VARCHAR}, 
      #{bankAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCash" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into withdraw_cash
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="withdrawPrice != null" >
        withdraw_price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="cardholderName != null" >
        cardholder_name,
      </if>
      <if test="identityCard != null" >
        identity_card,
      </if>
      <if test="bankAddress != null" >
        bank_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="withdrawPrice != null" >
        #{withdrawPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=INTEGER},
      </if>
      <if test="cardholderName != null" >
        #{cardholderName,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null" >
        #{bankAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCashExample" resultType="java.lang.Integer" >
    select count(*) from withdraw_cash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update withdraw_cash
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawPrice != null" >
        withdraw_price = #{record.withdrawPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=INTEGER},
      </if>
      <if test="record.cardholderName != null" >
        cardholder_name = #{record.cardholderName,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCard != null" >
        identity_card = #{record.identityCard,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAddress != null" >
        bank_address = #{record.bankAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update withdraw_cash
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      withdraw_price = #{record.withdrawPrice,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=INTEGER},
      cardholder_name = #{record.cardholderName,jdbcType=VARCHAR},
      identity_card = #{record.identityCard,jdbcType=VARCHAR},
      bank_address = #{record.bankAddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCash" >
    update withdraw_cash
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="withdrawPrice != null" >
        withdraw_price = #{withdrawPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=INTEGER},
      </if>
      <if test="cardholderName != null" >
        cardholder_name = #{cardholderName,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null" >
        bank_address = #{bankAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.px.spring.springtest.orm.model.WithdrawCash" >
    update withdraw_cash
    set user_id = #{userId,jdbcType=INTEGER},
      withdraw_price = #{withdrawPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=INTEGER},
      cardholder_name = #{cardholderName,jdbcType=VARCHAR},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      bank_address = #{bankAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>