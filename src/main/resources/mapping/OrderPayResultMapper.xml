<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.px.spring.springtest.orm.mapper.OrderPayResultMapper" >
  <resultMap id="BaseResultMap" type="com.study.px.spring.springtest.orm.model.OrderPayResult" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="BIT" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, pay_type, out_trade_no, trade_no, total_amount, seller_id, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_pay_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_pay_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_pay_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResultExample" >
    delete from order_pay_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResult" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_pay_result (order_id, pay_type, out_trade_no, 
      trade_no, total_amount, seller_id, 
      create_time)
    values (#{orderId,jdbcType=INTEGER}, #{payType,jdbcType=BIT}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{tradeNo,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DECIMAL}, #{sellerId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResult" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_pay_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="tradeNo != null" >
        trade_no,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=BIT},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResultExample" resultType="java.lang.Integer" >
    select count(*) from order_pay_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_pay_result
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=BIT},
      </if>
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null" >
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_pay_result
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=BIT},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      seller_id = #{record.sellerId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResult" >
    update order_pay_result
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=BIT},
      </if>
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.px.spring.springtest.orm.model.OrderPayResult" >
    update order_pay_result
    set order_id = #{orderId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=BIT},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      seller_id = #{sellerId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>