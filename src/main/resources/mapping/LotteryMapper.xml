<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.px.spring.springtest.orm.mapper.LotteryMapper" >
  <resultMap id="BaseResultMap" type="com.study.px.spring.springtest.orm.model.Lottery" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ticket_number" property="ticketNumber" jdbcType="VARCHAR" />
    <result column="lottery_type_id" property="lotteryTypeId" jdbcType="INTEGER" />
    <result column="par_price" property="parPrice" jdbcType="DECIMAL" />
    <result column="lottery_photo" property="lotteryPhoto" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="settlement_status" property="settlementStatus" jdbcType="BIT" />
    <result column="commission" property="commission" jdbcType="DECIMAL" />
    <result column="lottery_window_id" property="lotteryWindowId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ticket_number, lottery_type_id, par_price, lottery_photo, state, settlement_status, 
    commission, lottery_window_id, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.px.spring.springtest.orm.model.LotteryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lottery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lottery
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lottery
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.px.spring.springtest.orm.model.LotteryExample" >
    delete from lottery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.px.spring.springtest.orm.model.Lottery" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lottery (ticket_number, lottery_type_id, par_price, 
      lottery_photo, state, settlement_status, 
      commission, lottery_window_id, create_time, 
      update_time)
    values (#{ticketNumber,jdbcType=VARCHAR}, #{lotteryTypeId,jdbcType=INTEGER}, #{parPrice,jdbcType=DECIMAL}, 
      #{lotteryPhoto,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{settlementStatus,jdbcType=BIT}, 
      #{commission,jdbcType=DECIMAL}, #{lotteryWindowId,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.study.px.spring.springtest.orm.model.Lottery" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lottery
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ticketNumber != null" >
        ticket_number,
      </if>
      <if test="lotteryTypeId != null" >
        lottery_type_id,
      </if>
      <if test="parPrice != null" >
        par_price,
      </if>
      <if test="lotteryPhoto != null" >
        lottery_photo,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="settlementStatus != null" >
        settlement_status,
      </if>
      <if test="commission != null" >
        commission,
      </if>
      <if test="lotteryWindowId != null" >
        lottery_window_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ticketNumber != null" >
        #{ticketNumber,jdbcType=VARCHAR},
      </if>
      <if test="lotteryTypeId != null" >
        #{lotteryTypeId,jdbcType=INTEGER},
      </if>
      <if test="parPrice != null" >
        #{parPrice,jdbcType=DECIMAL},
      </if>
      <if test="lotteryPhoto != null" >
        #{lotteryPhoto,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="settlementStatus != null" >
        #{settlementStatus,jdbcType=BIT},
      </if>
      <if test="commission != null" >
        #{commission,jdbcType=DECIMAL},
      </if>
      <if test="lotteryWindowId != null" >
        #{lotteryWindowId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.px.spring.springtest.orm.model.LotteryExample" resultType="java.lang.Integer" >
    select count(*) from lottery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lottery
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ticketNumber != null" >
        ticket_number = #{record.ticketNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.lotteryTypeId != null" >
        lottery_type_id = #{record.lotteryTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.parPrice != null" >
        par_price = #{record.parPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.lotteryPhoto != null" >
        lottery_photo = #{record.lotteryPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.settlementStatus != null" >
        settlement_status = #{record.settlementStatus,jdbcType=BIT},
      </if>
      <if test="record.commission != null" >
        commission = #{record.commission,jdbcType=DECIMAL},
      </if>
      <if test="record.lotteryWindowId != null" >
        lottery_window_id = #{record.lotteryWindowId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lottery
    set id = #{record.id,jdbcType=INTEGER},
      ticket_number = #{record.ticketNumber,jdbcType=VARCHAR},
      lottery_type_id = #{record.lotteryTypeId,jdbcType=INTEGER},
      par_price = #{record.parPrice,jdbcType=DECIMAL},
      lottery_photo = #{record.lotteryPhoto,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIT},
      settlement_status = #{record.settlementStatus,jdbcType=BIT},
      commission = #{record.commission,jdbcType=DECIMAL},
      lottery_window_id = #{record.lotteryWindowId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.px.spring.springtest.orm.model.Lottery" >
    update lottery
    <set >
      <if test="ticketNumber != null" >
        ticket_number = #{ticketNumber,jdbcType=VARCHAR},
      </if>
      <if test="lotteryTypeId != null" >
        lottery_type_id = #{lotteryTypeId,jdbcType=INTEGER},
      </if>
      <if test="parPrice != null" >
        par_price = #{parPrice,jdbcType=DECIMAL},
      </if>
      <if test="lotteryPhoto != null" >
        lottery_photo = #{lotteryPhoto,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="settlementStatus != null" >
        settlement_status = #{settlementStatus,jdbcType=BIT},
      </if>
      <if test="commission != null" >
        commission = #{commission,jdbcType=DECIMAL},
      </if>
      <if test="lotteryWindowId != null" >
        lottery_window_id = #{lotteryWindowId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.px.spring.springtest.orm.model.Lottery" >
    update lottery
    set ticket_number = #{ticketNumber,jdbcType=VARCHAR},
      lottery_type_id = #{lotteryTypeId,jdbcType=INTEGER},
      par_price = #{parPrice,jdbcType=DECIMAL},
      lottery_photo = #{lotteryPhoto,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      settlement_status = #{settlementStatus,jdbcType=BIT},
      commission = #{commission,jdbcType=DECIMAL},
      lottery_window_id = #{lotteryWindowId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>