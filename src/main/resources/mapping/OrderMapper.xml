<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.px.spring.springtest.orm.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.study.px.spring.springtest.orm.model.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_ticket" property="orderTicket" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="BIT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="purchase_quantity" property="purchaseQuantity" jdbcType="INTEGER" />
    <result column="payment_type" property="paymentType" jdbcType="BIT" />
    <result column="order_status" property="orderStatus" jdbcType="BIT" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_ticket, order_type, user_id, order_amount, purchase_quantity, payment_type, 
    order_status, state, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.px.spring.springtest.orm.model.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.px.spring.springtest.orm.model.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.px.spring.springtest.orm.model.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order (order_ticket, order_type, user_id, 
      order_amount, purchase_quantity, payment_type, 
      order_status, state, create_time, 
      update_time)
    values (#{orderTicket,jdbcType=VARCHAR}, #{orderType,jdbcType=BIT}, #{userId,jdbcType=INTEGER}, 
      #{orderAmount,jdbcType=DECIMAL}, #{purchaseQuantity,jdbcType=INTEGER}, #{paymentType,jdbcType=BIT}, 
      #{orderStatus,jdbcType=BIT}, #{state,jdbcType=BIT}, #{createTime,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.study.px.spring.springtest.orm.model.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderTicket != null" >
        order_ticket,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="purchaseQuantity != null" >
        purchase_quantity,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderTicket != null" >
        #{orderTicket,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=BIT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseQuantity != null" >
        #{purchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=BIT},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=BIT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.px.spring.springtest.orm.model.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderTicket != null" >
        order_ticket = #{record.orderTicket,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=BIT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseQuantity != null" >
        purchase_quantity = #{record.purchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.paymentType != null" >
        payment_type = #{record.paymentType,jdbcType=BIT},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=BIT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set id = #{record.id,jdbcType=INTEGER},
      order_ticket = #{record.orderTicket,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=BIT},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      purchase_quantity = #{record.purchaseQuantity,jdbcType=INTEGER},
      payment_type = #{record.paymentType,jdbcType=BIT},
      order_status = #{record.orderStatus,jdbcType=BIT},
      state = #{record.state,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.px.spring.springtest.orm.model.Order" >
    update order
    <set >
      <if test="orderTicket != null" >
        order_ticket = #{orderTicket,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=BIT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseQuantity != null" >
        purchase_quantity = #{purchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=BIT},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=BIT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.px.spring.springtest.orm.model.Order" >
    update order
    set order_ticket = #{orderTicket,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=BIT},
      user_id = #{userId,jdbcType=INTEGER},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      purchase_quantity = #{purchaseQuantity,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=BIT},
      order_status = #{orderStatus,jdbcType=BIT},
      state = #{state,jdbcType=BIT},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>